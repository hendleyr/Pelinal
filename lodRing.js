//tabulated LOD radii
var radii = [10, 10.001953125, 10.03125, 10.158203125, 10.5, 11.220703125, 12.53125, 14.689453125, 18, 22.814453125, 29.53125, 38.595703125, 50.5, 65.783203125, 85.03125, 108.876953125, 138, 173.126953125, 215.03125, 264.533203125, 322.5, 389.845703125, 467.53125, 556.564453125, 658, 772.939453125, 902.53125, 1047.970703125, 1210.5, 1391.408203125, 1592.03125, 1813.751953125, 2058, 2326.251953125, 2620.03125, 2940.908203125, 3290.5, 3670.470703125, 4082.53125, 4528.439453125, 5010, 5529.064453125, 6087.53125, 6687.345703125, 7330.5, 8019.033203125, 8755.03125, 9540.626953125, 10378, 11269.376953125, 12217.03125, 13223.283203125, 14290.5, 15421.095703125, 16617.53125, 17882.314453125, 19218, 20627.189453125, 22112.53125, 23676.720703125, 25322.5, 27052.658203125, 28870.03125, 30777.501953125, 32778, 34874.501953125, 37070.03125, 39367.658203125, 41770.5, 44281.720703125, 46904.53125, 49642.189453125, 52498, 55475.314453125, 58577.53125, 61808.095703125, 65170.5, 68668.283203125, 72305.03125, 76084.376953125, 80010, 84085.626953125, 88315.03125, 92702.033203125, 97250.5, 101964.345703125, 106847.53125, 111904.064453125, 117138, 122553.439453125, 128154.53125, 133945.470703125, 139930.5, 146113.908203125, 152500.03125, 159093.251953125, 165898, 172918.751953125, 180160.03125, 187626.408203125, 195322.5, 203252.970703125, 211422.53125, 219835.939453125, 228498, 237413.564453125, 246587.53125, 256024.845703125, 265730.5, 275709.533203125, 285967.03125, 296508.126953125, 307338, 318461.876953125, 329885.03125, 341612.783203125, 353650.5, 366003.595703125, 378677.53125, 391677.814453125, 405010, 418679.689453125, 432692.53125, 447054.220703125, 461770.5, 476847.158203125, 492290.03125, 508105.001953125];

//set up LOD rings
var pVB = new Array(128*384);
var pIB = new Array((128+1)*(384+1)*6);

var nVert = 0;
var j;



for(j = 0; j < 128; j++) {	//orig. 512
	var R0 = 10;	//(SQR(j*RScale))*MaxR;
	for (var i = 0; i < 384; i++) {
	  var A = (i*Math.PI*2.0)/384.0;
	  var dX = Math.cos(A), dY = Math.sin(A);
	  nVert++;
	  pVB[j*384+i] = [ dX*radii[j], dY*radii[j], j ]; //glVertex3fv(A.Get());
	}
 }
 
var nInd = 0;
for (var i = 0; i < 384+1; i++) { 
  for(j = 0; j < 128-1; j++) {
	var Ind = [j*384+(i%384), (j+1)*384+(i%384), (j+1)*384+((i+1)%384), (j)*384+((i+1)%384)];
	pIB[nInd++] = Ind[0];  pIB[nInd++] = Ind[1];  pIB[nInd++] = Ind[2];
	pIB[nInd++] = Ind[0];  pIB[nInd++] = Ind[2];  pIB[nInd++] = Ind[3];
  }
}

////////////////////////////////
var radii = [0, 1, 16, 81, 256, 625, 1296, 2401, 4096, 6561, 10000, 14641, 20736, 28561, 38416, 50625, 65536, 83521, 104976, 130321, 160000, 194481, 234256, 279841, 331776, 390625, 
456976, 531441, 614656, 707281, 810000, 923521, 1048576, 1185921, 1336336, 1500625, 1679616, 1874161, 2085136, 2313441, 2560000, 2825761, 3111696, 3418801, 3748096, 4100625, 
4477456, 4879681, 5308416, 5764801, 6250000, 6765201, 7311616, 7890481, 8503056, 9150625, 9834496, 10556001, 11316496, 12117361, 12960000, 13845841, 14776336, 15752961];

for(var j = 0; j < 64; j++) {	//orig. 512
	for (var i = 0; i < 64; i++) {
		var A = (i*Math.PI*2.0)/64.0;
		var dX = Math.cos(A), dY = Math.sin(A);
		
		waterGeometry.vertices.push(new THREE.Vector3(dX*radii[j], 0, dY*radii[j]));
	}
}

for (var i = 0; i < 64+1; i++) {
	for(j = 0; j < 64-1; j++) {
		var Ind = [j*64+(i%64), (j+1)*64+(i%64), (j+1)*64+((i+1)%64), (j)*64+((i+1)%64)];
		
		waterGeometry.faces.push(new THREE.Face3(Ind[0], Ind[1], Ind[2], new THREE.Vector3(0,1,0)));
		waterGeometry.faces.push(new THREE.Face3(Ind[0], Ind[2], Ind[3], new THREE.Vector3(0,1,0)));
	}
}